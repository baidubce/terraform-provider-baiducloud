---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "baiducloud_cdn_domain Resource - terraform-provider-baiducloud"
subcategory: "Content Delivery Network (CDN)"
description: |-
  Use this resource to manage acceleration domain and its origin configuration.
  More information can be found in the Developer Guide https://cloud.baidu.com/doc/CDN/s/rjwvyev26.
---

# baiducloud_cdn_domain (Resource)

Use this resource to manage acceleration domain and its origin configuration.

More information can be found in the [Developer Guide](https://cloud.baidu.com/doc/CDN/s/rjwvyev26).

## Example Usage

```terraform
resource "baiducloud_cdn_domain" "example" {
  domain = "example.domain.com"

  origin {
    backup = false
    host   = "example1r.domain.com"
    peer   = "https://1.2.3.4:443"
    weight = 20
    isp    = "un"
  }
  origin {
    backup = false
    host   = "example2r.domain.com"
    peer   = "http://2.3.4.5:80"
    weight = 20
  }
  origin {
    backup = true
    peer   = "http://3.4.5.6:80"
    weight = 20
  }

  default_host = "example3.domain.com"
  form         = "image"

}
```

If you want to create an DRCDN, you can refer to the following example
```terraform
resource "baiducloud_cdn_domain" "default" {
  domain = "blog.zxhome.cloud"
  drcdn_enabled = true
  dsa {
    comment = "test"
    rule {
      type  = "suffix"
      value = ".do"
    }
    rule {
      type  = "path"
      value = "/abc"
    }
    rule {
      type  = "exactPath"
      value = "/test/api"
    }
    rule {
      type  = "method"
      value = "POST;PUT"
    }
  }
  origin {
    backup = false
    host   = "icloud1.yuhaiwei.net"
    peer   = "https://1.2.3.4:443"
    weight = 20
    isp    = "un"
  }
  origin {
    backup = false
    host   = "icloud2.yuhaiwei.net"
    peer   = "http://2.3.4.5:80"
    weight = 20
  }
  origin {
    backup = true
    peer   = "http://3.4.5.6:80"
    weight = 20
  }
  default_host = "icloud5.yuhaiwei.net"
  form         = "drcdn"
}
```

<!-- schema generated by tfplugindocs -->
## Schema

### Required

- `domain` (String) Name of the acceleration domain.
- `origin` (Block List, Min: 1) Origin server configuration of the acceleration domain. (see [below for nested schema](#nestedblock--origin))

### Optional

- `default_host` (String) Domain-level host. Priority is lower than origin server host(ie origin.host).
- `drcdn_enabled` (Boolean) Whether enable DRCDN, Value is true or false. When this field is true, it indicates that you wish to create a DRCDN domain and you must explicitly configure the dsa parameters.
- `dsa` (Block List) (see [below for nested schema](#nestedblock--dsa))
- `form` (String) Business type of the domain name. Defaults to `default`. Valid values: `image`(small image file), `download`(large file downloading), `media` (streaming media on demand), `dynamic`(dynamic and static acceleration).
- `tags` - (Optional, ForceNew) Tags, do not support modify

### Read-Only

- `cname` (String) CNAME address of the acceleration domain.
- `create_time` (String) Creation time of the acceleration domain.
- `id` (String) The ID of this resource.
- `is_ban` (String) Whether the acceleration domain is blocked. `YES` means blocked, and `NO` means not blocked.
- `last_modify_time` (String) Latest modification time of the acceleration domain.
- `status` (String) Status of the domain name. Possible values: `RUNNING`,`OPERATING`, `STOPPED`.

<a id="nestedblock--origin"></a>
### Nested Schema for `origin`

Required:

- `peer` (String) Format is {protocol://}{address}{:port}. `protocol` is optional, and valid values: `http`, `https`. `address` must be ip address or domain name. IPv6 address must be in '[ipv6]' format. `port` is optional.

Optional:

- `backup` (Boolean) Whether is a backup origin server. Defaults to `false`.
- `host` (String) The host value used when forwarding to origin server
- `isp` (String) ISP of the origin server. Valid values: `un`(China Unicom), `ct`(China Telecom), `cm`(China Mobile)
- `weight` (Number) The origin server weight. Must be between `1` and `100`. Sum of all weights should not be greater than 100. No effect when `peer` is domain name.


<a id="nestedblock--dsa"></a>
### Nested Schema for `dsa`

Optional:

- `comment` (String) Comment of the dsa config
- `rule` (Block List) (see [below for nested schema](#nestedblock--dsa--rule))

<a id="nestedblock--dsa--rule"></a>
### Nested Schema for `dsa.rule`

Required:

- `type` (String) Rule type, Valid values: `suffix` indicates the file type, `path` indicates the dynamic path, `exactPath` indicates the dynamic URL, `method` indicates the request method (supports `GET`, `POST`, `PUT`, `DELETE`, `OPTIONS`)
- `value` (String) type specifies the type of configuration rules. Multiple rules are separated by `;`. For example, when configuring multiple HTTP methods for CDN domain, its value may be `POST;PUT;DELETE`.

## Import

Import is supported using the following syntax:

```shell
terraform import baiducloud_cdn_domain.example example1.domain.com
```
