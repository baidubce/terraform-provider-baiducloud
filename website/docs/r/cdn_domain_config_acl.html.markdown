---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "baiducloud_cdn_domain_config_acl Resource - terraform-provider-baiducloud"
subcategory: "CDN"
description: |-
Use this resource to manage acl-related configuration of the acceleration domain.
More information can be found in the Developer Guide https://cloud.baidu.com/doc/CDN/s/yjxzhvf21.
~> NOTE: Creating a resource will overwrite current acl-related configuration. Deleting a resource won't change current configuration.
---

# baiducloud_cdn_domain_config_acl (Resource)

Use this resource to manage acl-related configuration of the acceleration domain.

More information can be found in the [Developer Guide](https://cloud.baidu.com/doc/CDN/s/yjxzhvf21).

~> **NOTE:** Creating a resource will overwrite current acl-related configuration. Deleting a resource won't change current configuration.

## Example Usage

```terraform
resource "baiducloud_cdn_domain_config_acl" "example" {
  domain = "example.domain.com"

  referer_acl {
    allow_empty = false
    black_list = ["www.xxx.com", "*.abcde.com"]
  }

  ip_acl {
    white_list = ["1.2.3.4", "2.3.4.5"]
  }

  ua_acl {
    black_list = ["MQQBrowser/5.3/Mozilla/5.0", "Mozilla/5.0 (Linux; Android 7.0"]
  }

  cors {
    allow = "on"
    origin_list = ["https://www.baidu.com", "http://*.bce.com"]
  }

  access_limit {
    enabled = true
    limit   = 500
  }

  traffic_limit {
    enable           = true
    limit_start_hour = 1
    limit_end_hour   = 23
    limit_rate       = 500
  }

  request_auth {
    type = "A"
    key1 = "ABCD1234"
    key2 = "abcd5678"
    timeout = 1000
    timestamp_metric = 10
  }

}
```

<!-- schema generated by tfplugindocs -->
## Schema

### Required

- `domain` (String) Name of the acceleration domain.

### Optional

- `access_limit` (Block List, Max: 1) IP access limit configuration of the acceleration domain. (see [below for nested schema](#nestedblock--access_limit))
- `cors` (Block List, Max: 1) Cors cross-domain configuration of the acceleration domain. (see [below for nested schema](#nestedblock--cors))
- `ip_acl` (Block List, Max: 1) IP access configuration of the acceleration domain. (see [below for nested schema](#nestedblock--ip_acl))
- `referer_acl` (Block List, Max: 1) Referer access configuration of the acceleration domain. (see [below for nested schema](#nestedblock--referer_acl))
- `request_auth` (Block List, Max: 1) Access authentication configuration of the acceleration domain. (see [below for nested schema](#nestedblock--request_auth))
- `traffic_limit` (Block List, Max: 1) Rate limit for a single link configuration of the acceleration domain. (see [below for nested schema](#nestedblock--traffic_limit))
- `ua_acl` (Block List, Max: 1) User agent access configuration of the acceleration domain. (see [below for nested schema](#nestedblock--ua_acl))

### Read-Only

- `id` (String) The ID of this resource.

<a id="nestedblock--access_limit"></a>
### Nested Schema for `access_limit`

Optional:

- `enabled` (Boolean) Whether visit frequency limit for a single IP node is enabled. Defaults to `false`.
- `limit` (Number) Maximum number of requests a single IP node can send in one second. Defaults to `1000`.


<a id="nestedblock--cors"></a>
### Nested Schema for `cors`

Optional:

- `allow` (String) Whether allowing cross-domain access. Defaults to `off`. Other valid value: `on`
- `origin_list` (Set of String) Domain names with cross-domain allowed. Support extensive domain name. Each name can contain at most one wildcard


<a id="nestedblock--ip_acl"></a>
### Nested Schema for `ip_acl`

Optional:

- `black_list` (Set of String) IP blacklist, support IP segments in CIDR format. Conflict with `white_list`
- `white_list` (Set of String) IP whitelist, support IP segments in CIDR format. Conflict with `black_list`


<a id="nestedblock--referer_acl"></a>
### Nested Schema for `referer_acl`

Optional:

- `allow_empty` (Boolean) Whether empty referer access is allowed. Defaults to `true`.
- `black_list` (Set of String) Referer blacklist. Support wildcard and no protocol required. Conflict with `white_list`
- `white_list` (Set of String) Referer whitelist. Support wildcard and no protocol required. Conflict with `black_list`


<a id="nestedblock--request_auth"></a>
### Nested Schema for `request_auth`

Required:

- `key1` (String) Main authorization key. Letters and numbers can be used. Length should be in 6-32.
- `type` (String) Authentication method. Valid values: `A`, `B`, `C`

Optional:

- `key2` (String) Secondary authorization key. Letters and numbers can be used. Length should be in 6-32.
- `timeout` (Number) Authorization cache time.
- `timestamp_metric` (Number) Time format. Valid values: `10`, `16`.


<a id="nestedblock--traffic_limit"></a>
### Nested Schema for `traffic_limit`

Optional:

- `enable` (Boolean) Whether rate limit is enabled. Defaults to `false`.
- `limit_end_hour` (Number) Time to start speed limit. Should be in 0-24, and greater than `limit_start_hour`. Defaults to `24`.
- `limit_rate` (Number) Limit rate in Byte/s
- `limit_start_hour` (Number) Time to start speed limit. Should be in 0-24, and smaller than `limit_end_hour`. Defaults to `0`.


<a id="nestedblock--ua_acl"></a>
### Nested Schema for `ua_acl`

Optional:

- `black_list` (Set of String) UA blacklist, length of a single ua should be in 1-200.
- `white_list` (Set of String) UA whitelist, length of a single ua should be in 1-200.

## Import

Import is supported using the following syntax:

```shell
terraform import baiducloud_cdn_domain_config_acl.example example1.domain.com
```
