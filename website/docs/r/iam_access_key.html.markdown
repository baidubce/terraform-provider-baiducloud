---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "baiducloud_iam_access_key Resource - terraform-provider-baiducloud"
subcategory: "Identity and Access Management (IAM)"
description: |-
  Use this resource to manage IAM access key.
  More information can be found in the Developer Guide https://cloud.baidu.com/doc/IAM/s/mjx35fixq.
---

# baiducloud_iam_access_key (Resource)

Use this resource to manage IAM access key. 

More information can be found in the [Developer Guide](https://cloud.baidu.com/doc/IAM/s/mjx35fixq).

## Example Usage

```terraform
# Create a new access key and save it to a file
resource "baiducloud_iam_user" "example" {
  name = "tf-user"
}

resource "baiducloud_iam_access_key" "example" {
  username = baiducloud_iam_user.example.name
  secret_file = "access-key.txt"
}

# Create a new access key and encrypt secret using pgp key
resource "baiducloud_iam_access_key" "example" {
  username = "tf-user"
  enabled  = false
  pgp_key = "keybase:some_person_that_exists"
}
```

<!-- schema generated by tfplugindocs -->
## Schema

### Required

- `username` (String) The name of the IAM user associated with this access key.

### Optional

- `enabled` (Boolean) Whether the access key is enabled. Default to `true`.
- `pgp_key` (String) Either a base-64 encoded PGP public key, or a keybase username in the form `keybase:some_person_that_exists`, for use in the `encrypted_secret` output attribute. If providing a base-64 encoded PGP public key, make sure to provide the "raw" version and not the "armored" one (e.g. avoid passing the `-a` option to `gpg --export`).
- `secret_file` (String) The path of the file in which to save the access key.

### Read-Only

- `create_time` (String) Date and time in RFC3339 format that the access key was created.
- `encrypted_secret` (String) Encrypted secret, base64 encoded, if `pgp_key` was specified. The encrypted secret may be decrypted using the command line, for example: `terraform output -raw encrypted_secret | base64 --decode | keybase pgp decrypt`.
- `id` (String) The ID of this resource.
- `key_fingerprint` (String) Fingerprint of the PGP key used to encrypt the secret.
- `last_used_time` (String) Date and time in RFC3339 format that the access key was last used.
- `secret` (String, Sensitive) Secret access key. Note that this will be written to the state file. If you use this, please protect your backend state file judiciously. Alternatively, you may supply a `pgp_key` instead, which will prevent the secret from being stored in plaintext, at the cost of preventing the use of the secret key in automation.

